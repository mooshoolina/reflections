What happens when you initialize a repository? Why do you need to do it?

I think that all the files in the same folder get assigned to the same history. that means that later in the commits, when one or two is changed, the commit saves all the changes together. 

How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area is something in between, where the commit is not saved in the repository yet but the files that we are going to generate a commit for are added and selected.
The value is that you can select the files that you want to make a commit for among many.

How can you use the staging area to make sure you have one commit per logical change?

By running git diff and git diff —-staged it is possible to track the changes that have been committed, changes that are added to the staging area but not yet committed, and changes that were made and aren’t yet added and committed.  

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

when you want to make different versions of a working code. branches help you to switch easily between the commits.

How do the diagrams help you visualize the branch structure?
It make it easier to follow where a commit is located.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
the result will be one commit with both changes of the two branches. we represent it in the diagram because it has two parents.
