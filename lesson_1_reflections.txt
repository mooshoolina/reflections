How did viewing a diff between two versions of a file help you see the bug that was introduced?

It found the line with the bug immediately and saved the time needed to do that search.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

By giving me the chance to go back to the previous codes and check the evolution of the program.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

pros are that the code is not committed halfway. cons are that the judgment of the timing might become difficult.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

It is easier to track the changes that affect multiple files at the same time.

How can you use the commands git log and git diff to view the history of files?

git log will show all the versions saved (commits) and git diff allows to compare every two of them to find insertions and deletions.

How might using version control make you more confident to make changes that could break something?
By giving the possibility of tracking those changes later one at a time.

Now that you have your workspace set up, what do you want to try using Git for?

Iâ€™d like to use it for some ML programming.
